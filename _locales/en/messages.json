{
    "options_StopUpdates": {
        "message": "Clear window titles and prevent further updates"
    },
    "options_UpdateStatus": {
        "message": "Updating:"
    },
    "options_StartUpdates": {
        "message": "Start updating window titles"
    },
    "options_UpdatesOn": {
        "message": "True"
    },
    "options_UpdatesOff": {
        "message": "False"
    },
    "options_openInSeparateTab": {
        "message": "Open this option page in a separate tab"
    },
    "options_GeneralSection_Header": {
        "message": "Window Preface"
    },
    "options_MinTime": {
        "message": "Minimum time between window title updates: "
    },
    "options_Milliseconds": {
        "message": " milliseconds."
    },
    "options_Pixels": {
        "message": " pixels."
    },
    "options_AllowInPrivateWindows": {
        "message": "Don't count tabs that are in private windows."
    },
    "options_DontSetWindowTitleInPrivateWindows": {
        "message": "Don't set title's for private windows."
    },
    "options_DontSetWindowTitlesForPopups": {
        "message": "Don't set title's for popup windows."
    },
    "options_NewTabNoTitleWorkaround_Header": {
        "message": "Workaround for no title in new tab pages (Legacy)"
    },
    "options_NewTabNoTitleWorkaround_LegacyWarning": {
        "message": "This section is a workaround for a Firefox bug that has been fixed since at least Firefox 83.0 and Firefox ESR 78.5.0."
    },
    "options_NewTabNoTitleWorkaround_Permission": {
        "message": "Note: this feature requires the \"tabs\" permission to function."
    },
    "options_NewTabNoTitleWorkaround_Enabled": {
        "message": "Workaround for no title in new tab pages. Firefox's new tab page starts without a title but has one after its reloaded. The title doesn't appear immediately after the tab is reloaded however, instead it appears after the window title preface is set. This option automatically reloads all new tab pages when they are created and then sets the window preface so that new tab pages always have a title."
    },
    "options_NewTabNoTitleWorkaround_LoadWait": {
        "message": "Time to wait before reloading new tab page: "
    },
    "options_NewTabNoTitleWorkaround_MinPrefixWait": {
        "message": "Minimum time to wait after reloading new tab page before setting window preface: "
    },
    "options_NewTabNoTitleWorkaround_ReloadWait": {
        "message": "Maximum time to wait after reloading new tab page before setting window preface (title preface will be set before this time if the tab completes loading during the waiting period): "
    },
    "options_NewTabNoTitleWorkaround_TrackHandledTabs": {
        "message": "Track fixed tabs. Slightly worse performance but minimizes the times that the workaround code is activated."
    },
    "options_Format": {
        "message": "Window Title Preface Formatting:"
    },
    "options_FormatPlaceholders_TabCount": {
        "message": "$placeholder$: Number of tabs in the current window.",
        "placeholders": {
            "placeholder": {
                "content": "$1"
            }
        }
    },
    "options_FormatPlaceholders_TotalTabCount": {
        "message": "$placeholder$: Total number of tabs in all windows.",
        "placeholders": {
            "placeholder": {
                "content": "$1"
            }
        }
    },
    "options_FormatPlaceholders_ActiveTabIndex": {
        "message": "$placeholder$: The index of the selected tab in the current window. This index starts at 1.",
        "placeholders": {
            "placeholder": {
                "content": "$1"
            }
        }
    },
    "options_FormatPlaceholders_IfWindowName": {
        "message": "$placeholder$: where <b>$False$</b> and <b>$True$</b> can be any text. This placeholder will be replace with the <b>$False$</b> text if the window name is empty and the <b>$True$</b> text if the window name isn't empty.",
        "placeholders": {
            "placeholder": {
                "content": "$1"
            },
            "true": {
                "content": "True"
            },
            "false": {
                "content": "False"
            }
        }
    },
    "options_FormatPlaceholders_IfRegexMatch": {
        "message": "$placeholder$: where <b>$textToSearch$</b>, <b>$false$</b> and <b>$true$</b> can be any text. The <b>$regex$</b> text should be a valid regex definition and <b>$regexFlags$</b> should be some valid regex flags. This placeholder will be replace with the <b>$True$</b> text if the <b>$regex$</b> text matches the <b>$textToSearch$</b> and the <b>$False$</b> text if it doesn't match.",
        "placeholders": {
            "placeholder": {
                "content": "$1"
            },
            "textToSearch": {
                "content": "TextToMatchAgainst"
            },
            "regex": {
                "content": "Regex"
            },
            "regexFlags": {
                "content": "RegexFlags"
            },
            "true": {
                "content": "True"
            },
            "false": {
                "content": "False"
            }
        }
    },
    "options_FormatPlaceholders_WindowName": {
        "message": "$placeholder$: A window specific name specified by the user via the extension's toolbar button.",
        "placeholders": {
            "placeholder": {
                "content": "$1"
            }
        }
    },
    "options_FormatPlaceholders_Count": {
        "message": "$placeholder$: An integer, starts as 1 and increments until the window's prefix is unique.",
        "placeholders": {
            "placeholder": {
                "content": "$1"
            }
        }
    },
    "options_FormatPlaceholders_FirefoxVersion": {
        "message": "$placeholder$: Firefox version, for example \"51.0\" or \"51.0a2\".",
        "placeholders": {
            "placeholder": {
                "content": "$1"
            }
        }
    },
    "options_FormatPlaceholders_FirefoxBuildId": {
        "message": "$placeholder$: Firefox build id representing the specific build of the browser, for example \"20161018004015\".",
        "placeholders": {
            "placeholder": {
                "content": "$1"
            }
        }
    },
    "options_FormatPlaceholders_OS": {
        "message": "$placeholder$: The platform's operating system.",
        "placeholders": {
            "placeholder": {
                "content": "$1"
            }
        }
    },
    "options_FormatPlaceholders_Architecture": {
        "message": "$placeholder$: The platform's processor architecture.",
        "placeholders": {
            "placeholder": {
                "content": "$1"
            }
        }
    },
    "options_FormatPlaceholders_Percent": {
        "message": "$placeholder$: A <b>\"%\"</b> character. Provides a way to write escaped percent signs which can be useful to write text that would otherwise be interpreted as a placeholder.",
        "placeholders": {
            "placeholder": {
                "content": "$1"
            }
        }
    },
    "options_FormatPlaceholders_Comma": {
        "message": "$placeholder$: A <b>\",\"</b> character. Provides a way to write escaped commas which can be useful for the placeholders that take arguments.",
        "placeholders": {
            "placeholder": {
                "content": "$1"
            }
        }
    },
    "options_WindowData_Header": {
        "message": "Window Data"
    },
    "options_WindowData_Permission": {
        "message": "Note: the features in this section requires the \"sessions\" permission to function."
    },
    "options_WindowData_DefaultWindowName": {
        "message": "Default window name (this name is set to opened windows):"
    },
    "options_WindowData_InheritWindowName": {
        "message": "Inherit window name. If a window has focus when another window is opened then the new window's name is copied from the focused window."
    },
    "options_WindowData_InheritWindowSettings": {
        "message": "Inherit window settings. If a window has focus when another window is opened then the new window's settings are copied from the focused window."
    },
    "options_WindowData_TrackSessionRestore": {
        "message": "Detect session restored windows or re-opened recently closed windows. If this is disabled then windows without data (all checkboxes disabled and all text boxes empty) will be treated as new windows even if they are opened on session restore or are re-opened recently closed windows. This means that they can inherit window name or window settings and will get the default window name."
    },
    "options_WindowData_ApplyDefaultName_Button": {
        "message": "Reset all window names to the default name"
    },
    "options_WindowData_ApplyDefaultName_Warning": {
        "message": "Change all window names to the default name?"
    },
    "options_WindowData_ClearData_Button": {
        "message": "Clear Window Data"
    },
    "options_WindowData_ClearData_Warning": {
        "message": "Clear all window specific data?"
    },
    "options_Commands_Title": {
        "message": "Keyboard shortcuts"
    },
    "options_Commands_Info": {
        "message": "Select one of the text inputs below and then make a keyboard combination such as \"Alt+X\" to bind the keyboard shortcut to the selected text box. You can also press the \"Prompt\" button and manually write down a keyboard shortcut if you prefer. (Keyboard shortcuts require Firefox 60 or later)"
    },
    "options_Commands_ResetButton": {
        "message": "Reset"
    },
    "options_Commands_PromptButton": {
        "message": "Prompt"
    },
    "options_Commands_PromptButton_Description": {
        "message": "Write text representing a keyboard shortcut. For example \"Alt+X\""
    },
    "options_Commands_BrowserAction": {
        "message": "Open browser action popup"
    },
    "options_OptionalPermissions_Header": {
        "message": "Optional Permissions"
    },
    "options_OptionalPermissions_Tabs_Title": {
        "message": "\"tabs\""
    },
    "options_OptionalPermissions_Tabs_Explanation": {
        "message": "The \"tabs\" permission is needed to access a tab's title or URL.\n\nThis is needed by the workaround for no title in new tab pages since it needs to know if the opened tab has the \"about:newtab\" URL."
    },
    "options_OptionalPermissions_Sessions_Title": {
        "message": "\"sessions\""
    },
    "options_OptionalPermissions_Sessions_Explanation": {
        "message": "The \"sessions\" permission is needed to save window specific data such as window names.\n\nThe \"sessions\" permission is only available as an optional permission in Firefox 77 and later. If you want to use functionality that depends on this permission in an earlier Firefox version then you need to download an earlier version of this extension."
    },
    "options_OptionalPermissions_Sessions_LegacyWarning": {
        "message": "The \"sessions\" permission is only available as an optional permission in Firefox 77 and later. If you want to use functionality that depends on this permission in an earlier Firefox version then you need to download an earlier version of this extension.\n\nClick anywhere to dismiss this message."
    },
    "options_OptionalPermissions_Sessions_PermissionAvailable": {
        "message": "Permission available in this Firefox version:"
    },
    "options_OptionalPermissions_Sessions_PermissionAvailable_True": {
        "message": "True"
    },
    "options_OptionalPermissions_Sessions_PermissionAvailable_False": {
        "message": "False"
    },
    "options_Other_Header": {
        "message": "Other Settings"
    },
    "options_SettingsPageStyleLegend": {
        "message": "Option page style"
    },
    "options_PopupPageStyleLegend": {
        "message": "Browser action popup style"
    },
    "options_Animations_OptionsPage": {
        "message": "Disable animations on options page."
    },
    "options_Animations_PopupPage": {
        "message": "Disable animations on popup page."
    },
    "options_optionsPage_disableDarkTheme": {
        "message": "Disable dark theme support on options page."
    },
    "options_popupPage_disableDarkTheme": {
        "message": "Disable dark theme support on popup page."
    },
    "options_popupPage_width": {
        "message": "The width of the browser action popup (-1 to use the default width):"
    },
    "options_resetSettings": {
        "message": "Reset Settings"
    },
    "options_resetSettings_Prompt": {
        "message": "Do you want to reset all settings to default values?"
    },
    "popup_WindowName": {
        "message": "Window Name"
    },
    "popup_FormatPlaceholders": {
        "message": "Format Placeholders"
    },
    "popup_FormatPlaceholders_PlatformInfo": {
        "message": "Platform Info"
    },
    "popup_NotNameFormatPlaceholders": {
        "message": "Unavailable in window name"
    },
    "popup_SettingsTitle": {
        "message": "Window Settings"
    },
    "popup_SettingsOverride": {
        "message": "Override Setting"
    },
    "popup_SettingsShortcutTooltip": {
        "message": "Settings"
    },
    "popup_PermissionWarning": {
        "message": "The features in this popup requires the \"sessions\" permission to function. You can request this permission from the extensions option page which can be accessed easily via the button in the top right corner of the normal popup's page."
    },
    "optionalPermissions_BrowserActionPrompt": {
        "message": "You need to press on the extension's button in the browser's toolbar to request the permission. Press anywhere else in the settings page to cancel the request."
    },
    "optionalPermissions_Request": {
        "message": "Request"
    },
    "optionalPermissions_Remove": {
        "message": "Remove"
    },
    "optionalPermissions_Available": {
        "message": "Granted:"
    },
    "optionalPermissions_Granted": {
        "message": "True"
    },
    "optionalPermissions_NotGranted": {
        "message": "False"
    }
}